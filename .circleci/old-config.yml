# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
commands:
  print_pipeline_id:
    description: "A very simple command for printing pipeline id"
    parameters:
      to:
        type: string
        default: $CIRCLE_WORKFLOW_ID
    steps:
      - run: echo $CIRCLE_WORKFLOW_ID
jobs:
  say-hello:
    # Specify the execution environment.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"
  print_pipeline_id:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - print_pipeline_id:
          to: $CIRCLE_WORKFLOW_ID
  job_failure:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run: return 1
      - run:
          name: Upload Failed Tests
          command: echo 'Error Here'
          when: on_fail
  print_name:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run: 
          name: "echo an env var that is part of our project"
          command: |
            echo $MY_NAME # this env var must be set within the project
  save_hello_world_output:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run: echo "hello world" > ~/output.txt
      - persist_to_workspace:
          root: ~/
          paths:
            - output.txt
  print_output_file:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - attach_workspace:
          at: ~/
      - run: cat ~/output.txt


# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - say-hello
      - job_failure
      - print_pipeline_id
      - print_name
      - save_hello_world_output
      - print_output_file:
          requires:
            - save_hello_world_output